[{"/home/geodevadmin/programming/node_apps/politipoint_fe/src/index.js":"1","/home/geodevadmin/programming/node_apps/politipoint_fe/src/App.js":"2","/home/geodevadmin/programming/node_apps/politipoint_fe/src/store.js":"3","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/HomeContainer.js":"4","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/QuizContainer.js":"5","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/ParticipationContainer.js":"6","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/ResultsContainer.js":"7","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/IdeologiesContainer.js":"8","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/MapContainer.js":"9","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/HeaderLogo.js":"10","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Blurb.js":"11","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/ContinuumStatic.js":"12","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Statement.js":"13","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/StateCountySelector.js":"14","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Ideologies.js":"15","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/testResultActions.js":"16","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/quizActions.js":"17","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/ideologyActions.js":"18","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/Map.js":"19","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Continuum.js":"20","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/feedbackActions.js":"21","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/index.js":"22","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/types.js":"23","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/urlPrefix.js":"24","/home/geodevadmin/programming/node_apps/politipoint_fe/src/data/stateCounty.js":"25","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/Utilities/utils.js":"26","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/ExtrudeMapControl.js":"27","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/ResetMapControl.js":"28","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/LogoControl.js":"29","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/LegendControl.js":"30","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/RotateMapControl.js":"31","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/quizReducer.js":"32","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/testResultReducer.js":"33","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/feedbackReducer.js":"34","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/ideologyReducer.js":"35","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/class_versions/ResultsContainer.class.js":"36","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/countyReducer.js":"37","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/countyActions.js":"38"},{"size":219,"mtime":1605743523649,"results":"39","hashOfConfig":"40"},{"size":2332,"mtime":1609382869951,"results":"41","hashOfConfig":"40"},{"size":403,"mtime":1606578156197,"results":"42","hashOfConfig":"40"},{"size":3982,"mtime":1609382530239,"results":"43","hashOfConfig":"40"},{"size":4896,"mtime":1607619045651,"results":"44","hashOfConfig":"40"},{"size":4259,"mtime":1606980512005,"results":"45","hashOfConfig":"40"},{"size":3898,"mtime":1606980731150,"results":"46","hashOfConfig":"40"},{"size":871,"mtime":1607621224078,"results":"47","hashOfConfig":"40"},{"size":859,"mtime":1606975134701,"results":"48","hashOfConfig":"40"},{"size":757,"mtime":1606980085323,"results":"49","hashOfConfig":"40"},{"size":261,"mtime":1605748329765,"results":"50","hashOfConfig":"40"},{"size":5994,"mtime":1605748076688,"results":"51","hashOfConfig":"40"},{"size":6918,"mtime":1606516269000,"results":"52","hashOfConfig":"40"},{"size":3497,"mtime":1605734327382,"results":"53","hashOfConfig":"40"},{"size":457,"mtime":1607710866413,"results":"54","hashOfConfig":"40"},{"size":1896,"mtime":1606971679368,"results":"55","hashOfConfig":"40"},{"size":348,"mtime":1606587845318,"results":"56","hashOfConfig":"40"},{"size":674,"mtime":1606949339582,"results":"57","hashOfConfig":"40"},{"size":7713,"mtime":1609382194598,"results":"58","hashOfConfig":"40"},{"size":3129,"mtime":1606770605565,"results":"59","hashOfConfig":"40"},{"size":585,"mtime":1606593375308,"results":"60","hashOfConfig":"40"},{"size":667,"mtime":1609370649381,"results":"61","hashOfConfig":"40"},{"size":542,"mtime":1609369790945,"results":"62","hashOfConfig":"40"},{"size":111,"mtime":1609186834334,"results":"63","hashOfConfig":"40"},{"size":116057,"mtime":1605560755127,"results":"64","hashOfConfig":"40"},{"size":5408,"mtime":1606969883342,"results":"65","hashOfConfig":"40"},{"size":1899,"mtime":1606958963014,"results":"66","hashOfConfig":"40"},{"size":2316,"mtime":1606969303272,"results":"67","hashOfConfig":"40"},{"size":1066,"mtime":1606960494167,"results":"68","hashOfConfig":"40"},{"size":1102,"mtime":1606961086994,"results":"69","hashOfConfig":"40"},{"size":1932,"mtime":1606964131645,"results":"70","hashOfConfig":"40"},{"size":342,"mtime":1606578592696,"results":"71","hashOfConfig":"40"},{"size":718,"mtime":1606975384451,"results":"72","hashOfConfig":"40"},{"size":301,"mtime":1606591180672,"results":"73","hashOfConfig":"40"},{"size":443,"mtime":1606942978847,"results":"74","hashOfConfig":"40"},{"size":4091,"mtime":1606943216173,"results":"75","hashOfConfig":"40"},{"size":310,"mtime":1609374784567,"results":"76","hashOfConfig":"40"},{"size":280,"mtime":1609375569360,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e49kk6",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/geodevadmin/programming/node_apps/politipoint_fe/src/index.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/App.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/store.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/HomeContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/QuizContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/ParticipationContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/ResultsContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/IdeologiesContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/MapContainer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/HeaderLogo.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Blurb.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/ContinuumStatic.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Statement.js",["161"],"import React, { Component, Fragment} from 'react';\n\nclass Statement extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nextButtonOn: false,\n      showStatementFeedbackInstructions: false,\n      answerId: null,\n      feedbackId: null,\n      feedbackExplanation: ''\n    }\n  }\n\n  getStatementText = () => {\n    if(this.props.currentIndex > -1 && this.props.allStatementsCount) {\n      return `Statement ${(this.props.currentIndex + 1).toString()} of ${this.props.allStatementsCount.toString()}`\n    }\n    return ''\n  }\n\n  getClassName = (id) => {\n    return this.state.answerId === id ? 'statement-button statement-button-selected' : 'statement-button'\n  }\n\n  getFeedbackButtonClassName = (id) => {\n    return this.state.feedbackId === id ? 'statement-button statement-button-selected' : 'statement-button'\n  }\n\n  onAgreementClick = (event) => {\n    this.setState((previousState) => {\n      return {\n        ...previousState,\n        nextButtonOn: true,\n        answerId: event.target.id\n      }\n    })\n    \n    document.querySelector('.back-next-wrapper').scrollIntoView({ \n      behavior: 'smooth' \n    })\n  }\n\n  onFeedbackClick = (event) => {\n\n    this.setState((previousState) => {\n      return {\n        ...previousState,\n        feedbackId: event.target.id\n      }\n    })\n    \n    document.querySelector('.back-next-wrapper').scrollIntoView({ \n      behavior: 'smooth' \n    })\n  }\n\n  onNextClick = (event) => {\n    let mult\n    \n    switch(this.state.answerId) {\n      case \"answer-01\":\n        mult = 1.0\n        break\n      case \"answer-02\":\n        mult = 0.5\n        break\n      case \"answer-03\":\n        mult = 0\n        break\n      case \"answer-04\":\n        mult = -0.5\n        break\n      case \"answer-05\":\n        mult = -1.0\n        break\n      default:\n        mult = 0\n    }\n    \n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        showStatementFeedbackInstructions: false,\n        nextButtonOn: false,\n        answerId: null,\n        feedbackId: null,\n        feedbackExplanation: ''\n      }\n    })\n\n    if(this.state.feedbackId || this.state.feedbackExplanation) {\n\n      let feedbackScore\n\n      switch(this.state.feedbackId) {\n        case \"feedback-01\":\n          feedbackScore = 0\n          break\n        case \"feedback-02\":\n          feedbackScore = 10\n          break\n        case \"feedback-03\":\n          feedbackScore = 20\n          break\n        case \"feedback-04\":\n          feedbackScore = 30\n          break\n        case \"feedback-05\":\n          feedbackScore = 40\n          break\n        default:\n          feedbackScore = 0\n      }\n\n      const feedback = {\n        score: feedbackScore\n      }\n      \n      if(this.state.feedbackExplanation) feedback.explanation = this.state.feedbackExplanation\n      \n      this.props.onFeedbackGiven(feedback)\n\n      this.setState((previousState) => {\n        return {\n          ...previousState,\n          feedbackId: null,\n          feedExplanation: ''\n        }\n      })\n\n    }\n\n    this.props.onResponse(mult)\n\n  }\n\n  toggleStatementFeedbackInstructions = (event) => {\n    this.setState((previousState) => {\n      return {\n        ...previousState,\n        showStatementFeedbackInstructions: !previousState.showStatementFeedbackInstructions\n      }\n    })\n  }\n\n  render() {\n\n    return (\n      <Fragment>\n        \n      <h3>{ this.getStatementText() }</h3>\n\n      <div className=\"statement-wrapper\">{ this.props.currentText }</div>\n\n      <button onClick={ this.onAgreementClick } className={ this.getClassName(\"answer-01\") } id=\"answer-01\" style={{ backgroundColor: '#1b5e20' }}>Strongly agree</button>\n      <button onClick={ this.onAgreementClick } className={ this.getClassName(\"answer-02\") } id=\"answer-02\" style={{ backgroundColor: '#4caf50' }}>Agree</button>\n      <button onClick={ this.onAgreementClick } className={ this.getClassName(\"answer-03\") } id=\"answer-03\" style={{ backgroundColor: '#bbbbbb' }}>Neutral/unsure</button>\n      <button onClick={ this.onAgreementClick } className={ this.getClassName(\"answer-04\") } id=\"answer-04\" style={{ backgroundColor: '#f44336' }}>Disagree</button>\n      <button onClick={ this.onAgreementClick } className={ this.getClassName(\"answer-05\") } id=\"answer-05\" style={{ backgroundColor: '#b71c1c' }}>Strongly disagree</button>\n\n      <div className=\"feedback-wrapper\">\n        <div className=\"feedback-instructions-wrapper\">\n          <h4 style={{ display: this.state.showStatementFeedbackInstructions ? 'none' : 'block' }}>Is the statement above flawed?</h4>\n          <p style={{ display: this.state.showStatementFeedbackInstructions ? 'none' : 'block' }}>\n            <a id=\"feedback-expand\" onClick={this.toggleStatementFeedbackInstructions}>Click here</a> to provide feedback (optional)\n          </p>\n          <div className=\"feedback-instructions\" style={{ display: this.state.showStatementFeedbackInstructions ? 'block' : 'none' }}>Indicate below the degree to which statement above is flawed.<br />(biased, unclear or otherwise problematic)</div>\n        </div>\n        <div style={{ display: this.state.showStatementFeedbackInstructions ? 'block' : 'none' }}>\n          <button onClick={ this.onFeedbackClick } className={ this.getFeedbackButtonClassName(\"feedback-01\") } id=\"feedback-01\" style={{ backgroundColor: '#1b5e20' }}>No flaws</button>\n          <button onClick={ this.onFeedbackClick } className={ this.getFeedbackButtonClassName(\"feedback-02\") } id=\"feedback-02\" style={{ backgroundColor: '#4caf50' }}>Slightly flawed</button>\n          <button onClick={ this.onFeedbackClick } className={ this.getFeedbackButtonClassName(\"feedback-03\") } id=\"feedback-03\" style={{ backgroundColor: '#ff9400' }}>Significantly flawed</button>\n          <button onClick={ this.onFeedbackClick } className={ this.getFeedbackButtonClassName(\"feedback-04\") } id=\"feedback-04\" style={{ backgroundColor: '#f44336' }}>Substantially flawed</button>\n          <button onClick={ this.onFeedbackClick } className={ this.getFeedbackButtonClassName(\"feedback-05\") } id=\"feedback-05\" style={{ backgroundColor: '#b71c1c' }}>Majorly flawed</button>\n          <div className=\"explanation-wrapper\">\n            <textarea onChange={(event) => {\n              this.setState(previousState => {\n                return {...previousState, feedbackExplanation: event.target.value }\n              })\n            }} className=\"explanation\" placeholder=\"Explain your feedback (optional).\" value={ this.state.feedbackExplanation }>\n            </textarea>\n          </div>\n        </div>\n      </div>\n\n      {/* onclick=\"javascript:setFeedback(0, this.id)\" */}\n      <div className=\"back-next-wrapper\">\n        <button className={ `small_button${ this.state.nextButtonOn ? \"\" : \"_off\" }` } onClick={ this.onNextClick } disabled={ this.state.nextButtonOn ? '' :  'disabled' }>Next</button>\n      </div>\n\n\n      </Fragment>\n    )\n  }\n}\n\nexport default Statement\n","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/StateCountySelector.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Ideologies.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/testResultActions.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/quizActions.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/ideologyActions.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/Map.js",["162","163","164"],"import React, { useEffect, useRef, useState } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport mapboxgl from \"mapbox-gl\"\nimport \"mapbox-gl/dist/mapbox-gl.css\"\nimport \"./css/map.albers.css\"\n\n//import { allCounties } from \"../../data/counties_albers\"\nimport { fetchCounties } from '../../actions/countyActions'\n\nimport { getCountyFillColors } from './Utilities/utils'\nimport { handlePopup } from './Utilities/utils'\nimport { showPopup } from './Utilities/utils'\n\nimport ExtrudeMapControl from './controls/ExtrudeMapControl'\nimport ResetMapControl from './controls/ResetMapControl'\nimport RotateMapControl from './controls/RotateMapControl'\nimport LogoControl from './controls/LogoControl'\nimport LegendControl from './controls/LegendControl'\n\nimport { clearAveragedTestResults } from '../../actions/testResultActions'\n\nconst Map = (props) => {\n  \n  const mapContainer = useRef(null)\n  const [statefulMap, setStatefulMap] = useState(null)\n  const testResults = props.testResults\n  const dispatch = useDispatch()\n  const allCounties = useSelector(state => {\n    //console.log('state', state)\n    return state.countyReducer.counties\n  })\n  \n  useEffect(() => {\n\n    // console.log('fetchCounties')    \n    \n    dispatch(fetchCounties())\n\n    // return () => {\n    //   console.log('destroyed')\n    // }\n\n  }, [])\n\n  useEffect(() => {\n\n    if(testResults.length === 0) return\n\n    if(allCounties.hasOwnProperty('features') === false) return\n\n    // console.log('testResults.length', testResults.length)\n    // console.log('allCounties', allCounties)\n\n    let rotating = false\n    let countyOfInterest = {}\n    let mapBounds = [-21, -18.25, 21, 14]// get bounding box: http://bboxfinder.com, Southwest corner, Northeast corner\n\n    const getCountyOfInterest = () => countyOfInterest\n    const setCountyOfInterest = newCounty => countyOfInterest = newCounty\n    const isRotating = () => rotating\n    const toggleRotation = () => rotating = !rotating\n    \n    const allTestsCount = testResults.reduce((acc, obj) => { return acc + obj.tr_count }, 0)\n\n    const initMap = () => {\n\n      mapboxgl.accessToken = 'pk.eyJ1Ijoid2lsbGNhcnRlciIsImEiOiJjamV4b2g3Z2ExOGF4MzFwN3R1dHJ3d2J4In0.Ti-hnuBH8W4bHn7k6GCpGw'\n      \n      const center = [(mapBounds[0] + mapBounds[2]) / 2, (mapBounds[1] + mapBounds[3]) / 2]\n  \n      const mapboxGlMap = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: `mapbox://styles/willcarter/ckfps2kwa01u019pp7bel1a7w`,\n        center: center,\n        pitch: 0,\n        attributionControl: false\n      })\n      \n      let popup = new mapboxgl.Popup({\n        offset: 0,\n        closeButton: true,\n        closeOnClick: false\n      })\n\n      mapboxGlMap.fitBounds([\n        [mapBounds[0], mapBounds[1]],\n        [mapBounds[2], mapBounds[3]]\n      ])\n      \n      mapboxGlMap.addControl(new mapboxgl.NavigationControl(), 'top-left')\n      mapboxGlMap.addControl(new ExtrudeMapControl(), 'top-right')\n      mapboxGlMap.addControl(new mapboxgl.FullscreenControl(), 'top-right')\n      mapboxGlMap.addControl(new RotateMapControl(isRotating, toggleRotation), 'top-right')\n      mapboxGlMap.addControl(new ResetMapControl(isRotating, toggleRotation, setCountyOfInterest, mapBounds) , 'top-right')\n      mapboxGlMap.addControl(new LogoControl(), 'bottom-left')\n      \n      mapboxGlMap.addControl(new LegendControl(allTestsCount), 'bottom-right')\n\n      mapboxGlMap.scrollZoom.disable()\n      \n      mapboxGlMap.on('moveend', () => {\n\n        if(Object.keys(countyOfInterest).length > 0) {\n          showPopup(mapboxGlMap, countyOfInterest, testResults, popup)\n        }\n        else {\n          popup.remove()\n        } \n      \n      })\n\n      mapboxGlMap.on(\"load\", () => {\n  \n        mapboxGlMap.addSource('counties', {\n          type: 'vector',\n          url: 'mapbox://willcarter.czkf2uey'\n        })\n      \n        mapboxGlMap.addSource('counties_contracted_source', {\n          type: 'vector',\n          url: 'mapbox://willcarter.1n52p1jf'\n        })\n      \n        mapboxGlMap.addSource('states_source', {\n          type: 'vector',\n          url: 'mapbox://willcarter.a5cnwnoj'\n        })\n      \n        mapboxGlMap.addLayer({\n          'id': 'states_bg',\n          'source': 'states_source',\n          'source-layer': 'states_albers',\n          'type': 'fill',\n          'paint': {\n            'fill-color': '#ffffff'\n          }\n        })\n        \n        mapboxGlMap.addLayer({\n          'id': 'county',\n          'source': 'counties',\n          'source-layer': 'counties_albers-ala1ut',\n          'type': 'fill',\n          'paint': {\n            'fill-color': getCountyFillColors(testResults),\n            'fill-outline-color': '#919191'\n          }\n        })\n        \n        mapboxGlMap.addLayer({\n          'id': 'counties_contracted',\n          'source': 'counties_contracted_source',\n          'source-layer': 'counties_contracted_albers-cvwq37',\n          'type': 'fill',\n          'paint': {\n            'fill-opacity': 0\n          }\n        })\n        \n        mapboxGlMap.addLayer({\n          'id': 'states',\n          'source': 'states_source',\n          'source-layer': 'states_albers',\n          'type': 'line',\n          'paint': {\n            'line-width': 2,\n            'line-color': '#ffffff',\n            'line-opacity': 1,\n            'line-blur': 1\n          }\n        })\n\n        const matchingTestResultsFinder = (county) => {\n          return testResults.find((matchingTestResultsCounty) => {\n            if(matchingTestResultsCounty.county_geoid.toString() === county.properties.geoid.toString()) {\n              return matchingTestResultsCounty\n            }\n            return null\n          })\n        }\n\n        if(allCounties && allCounties.features && allCounties.features.length > 0) {\n          mapboxGlMap.addSource('counties-geojson', {\n            type: 'geojson',\n            data: {\n              type: \"FeatureCollection\",\n              features: allCounties.features.reduce((acc, county) => {\n                const match = matchingTestResultsFinder(county)\n                if(match) {\n                  county.properties.height = match[\"pct_height\"]\n                  acc = [...acc, county]\n                }\n                return acc\n              },[])\n            }\n          })\n  \n          mapboxGlMap.addLayer({\n            'id': 'county_extruded',\n            'source': 'counties-geojson',\n            'type': 'fill-extrusion',\n            'paint': {\n              'fill-extrusion-base': 0,\n              'fill-extrusion-color': getCountyFillColors(testResults),\n              'fill-extrusion-height': [\n                'interpolate', ['linear'],\n                ['get', 'height'],\n                0, 0,\n                1, 1000000\n               ],    \n              'fill-extrusion-opacity': 0\n            }\n          })\n        }\n        \n        handlePopup(mapboxGlMap, setCountyOfInterest, getCountyOfInterest, testResults)\n\n        setStatefulMap(mapboxGlMap)\n\n        console.log('mapStateful set in state')\n\n        \n        \n      })\n    }\n\n    if(!statefulMap) { \n      initMap()\n    }\n\n    return () => {\n      console.log('CLEANUP')\n      // console.log('mapContainer.current', mapContainer.current)\n\n      // if( mapContainer.current )\n      //   mapContainer.current.value = \"\"\n\n      // console.log('mapContainer.current', mapContainer.current)\n\n      // setStatefulMap(null)\n      // dispatch({\n      //   type: 'CLEAR_DATA'\n      // })\n      \n      // dispatch(clearAveragedTestResults())\n      // mapContainer.current = null\n      // console.log('destroyed!')\n    }\n\n  }, [testResults])\n\n  return (\n    <div id='map-container' ref={mapContainer}></div> \n  )\n\n}  \n\nexport default Map","/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Continuum.js",["165","166","167"],"import React from \"react\"\n\nexport const Continuum = ({\n  type = 'economic',\n  flip = false,\n  value = 50,\n  linePosition = 100,\n  width = 449,\n  height = 50,\n  match = ''\n}) => {\n\n  //yuck\n  String.prototype.toProperCase = function () {\n    return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n  }\n\n  if (width > 0) { height = .05 * width }\n  if (width < 450) { height = .08 * width }\n\n  if(flip) {\n    value = 100 - value\n  }\n\n  let leftPercent = (value * 100) / 100\n  let rightPercent = (100 - ((value * 100) / 100))\n\n  let leftPercentText = `${leftPercent.toFixed(1)}%`\n  let rightPercentText = `${rightPercent.toFixed(1)}%`\n  \n  let leftImg = ''\n  let rightImg = ''\n\n  if(type === 'economic') {\n    leftImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603471674/politipoint/axis/equality_n7pfnb.png'\n    rightImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603471314/politipoint/axis/markets_nivxqb.png'\n  }\n  else if (type === 'diplomatic') {\n    leftImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/world_gsftlk.png'\n    rightImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/nation_ovlorq.png'\n  }\n  else if (type === 'civil') {\n    leftImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/authority_ymkmvq.png'\n    rightImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/liberty_cmq4hm.png'\n  }\n  else if (type === 'societal') {\n    leftImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/progress_ygaeoo.png'\n    rightImg = 'https://res.cloudinary.com/fergusdev/image/upload/v1603210184/politipoint/axis/tradition_lgt21n.png'\n  }\n\n  linePosition = (value * width) / 100\n\n  return (\n    <div className=\"results-continuum\">\n      <h2>{ type.toProperCase() }: <span className=\"weight-300\">{ match }</span></h2>\n      <div className=\"axis\">\n        <div className=\"results-img-wrapper\">\n          <img className=\"result-axis-image\" src={ leftImg } />\n        </div>\n        <div className=\"bar-wrapper\">\n          <svg viewBox={`0 0 ${ width } ${ height }`}>\n            <defs>\n              <linearGradient id=\"gradient\">\n                <stop className=\"blue-stop\" offset=\"0%\"></stop>\n                <stop className=\"red-stop\" offset=\"100%\"></stop>\n              </linearGradient>\n            </defs>\n            <g>\n              <rect className=\"bar\" width={ width } height={ height }></rect>\n              <line className=\"line\" x1={ linePosition } y1=\"0\" x2={ linePosition } y2={ height }></line>\n              <text x={ (width * .01) } y={ height - (.35 * height)} className=\"bar-text\">{ leftPercentText }</text>\n              <text x={ width - (width * .01) } y={ height - (.35 * height)} className=\"bar-text\" textAnchor=\"end\">{ rightPercentText }</text>\n            </g>\n          </svg>\n        </div>\n        <div className=\"results-img-wrapper\">\n          <img className=\"result-axis-image\" src={ rightImg } />\n        </div>\n      </div>\n    </div>\n  )\n}","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/feedbackActions.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/index.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/types.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/urlPrefix.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/data/stateCounty.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/Utilities/utils.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/ExtrudeMapControl.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/ResetMapControl.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/LogoControl.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/LegendControl.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/components/Map/controls/RotateMapControl.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/quizReducer.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/testResultReducer.js",["168"],"import { NEW_TEST_RESULT, UPDATE_TEST_RESULT, FETCH_AVERAGED_TEST_RESULTS, CLEAR_AVERAGED_TEST_RESULTS } from \"../actions/types\";\n\nconst initialState = {\n  testResult: {}\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case NEW_TEST_RESULT:\n      return {\n        ...state,\n        testResult: action.payload\n      };\n    case UPDATE_TEST_RESULT:\n      return {\n        ...state,\n        testResult: action.payload\n      };\n    case FETCH_AVERAGED_TEST_RESULTS:\n      return {\n        ...state,\n        averagedTestResults: action.payload\n      };\n    case CLEAR_AVERAGED_TEST_RESULTS:\n      return {\n        testResult: state.testResult\n      };\n    default:\n      return state\n  }\n}","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/feedbackReducer.js",["169"],"import { NEW_FEEDBACK } from \"../actions/types\";\n\nconst initialState = {\n  feedback: {}\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case NEW_FEEDBACK:\n      return {\n        ...state,\n        feedback: action.payload\n      };\n    default:\n      return state\n  }\n}","/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/ideologyReducer.js",["170"],"import { FETCH_IDEOLOGIES, FETCH_IDEOLOGY_MATCH } from \"../actions/types\";\n\nconst initialState = {\n  ideologies: []\n}\n\nexport default (state = initialState, action) => {\n    \n  switch(action.type) {\n    case FETCH_IDEOLOGIES: \n      return {\n        ...state,\n        ideologies: action.payload\n      }\n    case FETCH_IDEOLOGY_MATCH: \n      return {\n        ...state,\n        match: action.payload\n      }\n    default:\n      return state\n  }\n}","/home/geodevadmin/programming/node_apps/politipoint_fe/src/containers/class_versions/ResultsContainer.class.js",[],"/home/geodevadmin/programming/node_apps/politipoint_fe/src/reducers/countyReducer.js",["171"],"import { FETCH_COUNTIES } from \"../actions/types\";\n\nconst initialState = {\n  counties: {}\n}\n\nexport default (state = initialState, action) => {\n    \n  switch(action.type) {\n    case FETCH_COUNTIES: \n      return {\n        ...state,\n        counties: action.payload\n      }\n    default:\n      return state\n  }\n}","/home/geodevadmin/programming/node_apps/politipoint_fe/src/actions/countyActions.js",[],{"ruleId":"172","severity":1,"message":"173","line":166,"column":13,"nodeType":"174","endLine":166,"endColumn":88},{"ruleId":"175","severity":1,"message":"176","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":34},{"ruleId":"179","severity":1,"message":"180","line":43,"column":6,"nodeType":"181","endLine":43,"endColumn":8,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":250,"column":6,"nodeType":"181","endLine":250,"endColumn":19,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":14,"column":3,"nodeType":"187","messageId":"188","endLine":16,"endColumn":4},{"ruleId":"189","severity":1,"message":"190","line":58,"column":11,"nodeType":"174","endLine":58,"endColumn":64},{"ruleId":"189","severity":1,"message":"190","line":77,"column":11,"nodeType":"174","endLine":77,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":7,"column":1,"nodeType":"193","endLine":31,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":7,"column":1,"nodeType":"193","endLine":17,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":7,"column":1,"nodeType":"193","endLine":23,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":7,"column":1,"nodeType":"193","endLine":18,"endColumn":2},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'clearAveragedTestResults' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["194"],"React Hook useEffect has missing dependencies: 'allCounties' and 'statefulMap'. Either include them or remove the dependency array.",["195"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [dispatch]",{"range":"200","text":"201"},"Update the dependencies array to be: [allCounties, statefulMap, testResults]",{"range":"202","text":"203"},[1330,1332],"[dispatch]",[7603,7616],"[allCounties, statefulMap, testResults]"]